variables:
 - group: ContainerRegistryVariables
 - group: VstsToolsBuildAgent
 - name: AgentImageName
   value: vststools-build-agent:20190917.5

resources:
  repositories:
  - repository: self

trigger:
  paths:
    exclude: 
    - Resources/

jobs:

- job: StartAgent
  displayName: 'Deploy and start agent'
  pool: 'Hosted Windows 2019 with VS2019'

  steps:
  # Check if ACI deployed and version of image in use, set condition variable for ACI deployment step
  - task: AzurePowerShell@4
    displayName: 'Check container state'
    inputs:
      azureSubscription: $(AzureSubscription)
      scriptType: inlineScript
      azurePowerShellVersion: latestVersion
      inline: |
        $ContainerGroup = Get-AzContainerGroup -ResourceGroupName $(ResourceGroupName) -Name $(ContainerName) |
        if ($ContainerGroup.Containers[0].Image -eq $($(ContainerRegistryAdminUser).azurecr.io/$(AgentImageName))) { Write-Output "##vso[task.setvariable variable=ImageNeedsUpdating]true" }
        if ($ContainerGroup.State -ne "Running") { Write-Output "##vso[task.setvariable variable=ContainerNeedsStarting]true" }

  # (Re)deploy ACI if not deployed / later image available
  - task: TotalALM.totalalm-tokenization.tokenization-build-task.Tokenization@2
    condition: variables['ImageNeedsUpdating']
    displayName: 'Tokenization: Transform file parameters.json'
    inputs:
      SourcePath: '$(System.DefaultWorkingDirectory)\Resources\ArmTemplates\BuildAgent\'
      TargetFileNames: parameters.json
  - task: AzureResourceGroupDeployment@2
    displayName: 'Deploy Container Instance Group'
    inputs:
      azureSubscription: $(AzureSubscription)
      resourceGroupName: $(ResourceGroupName)
      templateLocation: 'Linked artifact'
      csmFile: '$(System.DefaultWorkingDirectory)\Resources\ArmTemplates\BuildAgent\template.json'
      csmParametersFile: '$(System.DefaultWorkingDirectory)\Resources\ArmTemplates\BuildAgent\parameters.json'
      action: 'Create Or Update Resource Group'
      location: 'West Europe'
      overrideParameters: '-appContainerRegistryImage "$(ContainerRegistryAdminUser).azurecr.io/$(AgentImageName)" -containerRegistryServer $(ContainerRegistryAdminUser).azurecr.io -containerRegistryUsername $(ContainerRegistryAdminUser) -containerRegistryPassword $(ContainerRegistryPassword)'
  - task: DeleteFiles@1
    displayName: 'Delete parameters.json from $(System.DefaultWorkingDirectory)\Resources\ArmTemplates\BuildAgent\'
    inputs:
      SourceFolder: '$(System.DefaultWorkingDirectory)\Resources\ArmTemplates\BuildAgent\'
      Contents: parameters.json
    condition: always()      

  # Start ACI if image not changed
  - task: AzureCLI@1
    condition: variables['ContainerNeedsStarting']
    displayName: 'Start agent'
    inputs:
        azureSubscription: $(AzureSubscription)
        scriptLocation: inlineScript
        inlineScript: az container start --name $(ContainerName) --resource-group $(ResourceGroupName)

- job: TestModule
  dependsOn: StartAgent
  displayName: Test VstsTools PowerShell Module
  pool: 'GitHubProjectsPool'

  steps:
  # Run PowerShell tests and publish results
  - task: PowerShell@2
    name: InvokeTests
    displayName: 'Invoke-Tests'
    inputs: 
      targetType: 'filePath'
      filePath: $(System.DefaultWorkingDirectory)/Tests/Invoke-Tests.ps1
      arguments: -CodeCoveragePath $(System.DefaultWorkingDirectory)/VstsTools/**/*.ps1
    continueOnError: true
  - task: PublishTestResults@2
    displayName: 'Publish Test Results'
    inputs:
      testResultsFormat: NUnit
  - task: PublishCodeCoverageResults@1
    displayName: 'Publish code coverage'
    inputs:
      codeCoverageTool: 'JaCoCo'
      reportDirectory: $(System.DefaultWorkingDirectory)/JaCoCo
      summaryFileLocation: '**/CODECOVERAGE-*.xml'
  - task: PowerShell@2
    name: OutputTests
    displayName: 'Out-TestResults'
    inputs: 
      targetType: 'filePath'
      filePath: $(System.DefaultWorkingDirectory)/Tests/Out-TestResults.ps1
      arguments: '-CoveragePercent 65 -Verbose'

- job: StopAgent
  displayName: 'Stop the Azure Container Instance running the custom agent'
  pool: 'Hosted Windows 2019 with VS2019'
  dependsOn: [ StartAgent, TestModule ]
  condition: always()

  steps:
    - task: AzureCLI@1
      displayName: 'Stop agent'
      inputs:
        azureSubscription: $(AzureSubscription)
        scriptLocation: inlineScript
        inlineScript: az container stop --name $(ContainerName) --resource-group $(ResourceGroupName)